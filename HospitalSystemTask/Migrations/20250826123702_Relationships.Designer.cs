// <auto-generated />
using System;
using HospitalSystemTask.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HospitalSystemTask.Migrations
{
    [DbContext(typeof(HospitalDbContext))]
    [Migration("20250826123702_Relationships")]
    partial class Relationships
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HospitalSystemTask.Models.Consultant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Consultants");
                });

            modelBuilder.Entity("HospitalSystemTask.Models.Drug", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Code"));

                    b.Property<string>("Dosage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("Drugs");
                });

            modelBuilder.Entity("HospitalSystemTask.Models.Drug_Brand", b =>
                {
                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Code", "Brand");

                    b.ToTable("Drug_Brands");
                });

            modelBuilder.Entity("HospitalSystemTask.Models.Nurse", b =>
                {
                    b.Property<int>("Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Number"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("Ward_Id")
                        .HasColumnType("int");

                    b.HasKey("Number");

                    b.HasIndex("Ward_Id");

                    b.ToTable("Nurses");
                });

            modelBuilder.Entity("HospitalSystemTask.Models.Nurse_Drug_Patient", b =>
                {
                    b.Property<int>("Pat_Id")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<TimeOnly>("Time")
                        .HasColumnType("time");

                    b.Property<string>("Dosage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Drug_Code")
                        .HasColumnType("int");

                    b.Property<int>("Nur_Num")
                        .HasColumnType("int");

                    b.HasKey("Pat_Id", "Date", "Time");

                    b.HasIndex("Drug_Code");

                    b.HasIndex("Nur_Num");

                    b.ToTable("nurse_Drug_Patients");
                });

            modelBuilder.Entity("HospitalSystemTask.Models.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Con_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("Ward_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Con_Id");

                    b.HasIndex("Ward_Id");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("HospitalSystemTask.Models.Patient_Con", b =>
                {
                    b.Property<int>("Con_Id")
                        .HasColumnType("int");

                    b.Property<int>("Pat_Id")
                        .HasColumnType("int");

                    b.HasKey("Con_Id", "Pat_Id");

                    b.HasIndex("Pat_Id");

                    b.ToTable("Patient_Cons");
                });

            modelBuilder.Entity("HospitalSystemTask.Models.Ward", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Nurse_Num")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Nurse_Num")
                        .IsUnique();

                    b.ToTable("Wards");
                });

            modelBuilder.Entity("HospitalSystemTask.Models.Drug_Brand", b =>
                {
                    b.HasOne("HospitalSystemTask.Models.Drug", "Drug")
                        .WithMany("Brands")
                        .HasForeignKey("Code")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Drug");
                });

            modelBuilder.Entity("HospitalSystemTask.Models.Nurse", b =>
                {
                    b.HasOne("HospitalSystemTask.Models.Ward", "Ward")
                        .WithMany("Nurses")
                        .HasForeignKey("Ward_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("HospitalSystemTask.Models.Nurse_Drug_Patient", b =>
                {
                    b.HasOne("HospitalSystemTask.Models.Drug", "Drug")
                        .WithMany("Nurse_Drug_Patients")
                        .HasForeignKey("Drug_Code")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HospitalSystemTask.Models.Nurse", "Nurse")
                        .WithMany("Nurse_Drug_Patients")
                        .HasForeignKey("Nur_Num")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HospitalSystemTask.Models.Patient", "Patient")
                        .WithMany("Nurse_Drug_Patients")
                        .HasForeignKey("Pat_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Drug");

                    b.Navigation("Nurse");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("HospitalSystemTask.Models.Patient", b =>
                {
                    b.HasOne("HospitalSystemTask.Models.Consultant", "Consultant")
                        .WithMany("Patients")
                        .HasForeignKey("Con_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HospitalSystemTask.Models.Ward", "Ward")
                        .WithMany("Patients")
                        .HasForeignKey("Ward_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Consultant");

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("HospitalSystemTask.Models.Patient_Con", b =>
                {
                    b.HasOne("HospitalSystemTask.Models.Consultant", "Consultant")
                        .WithMany("Patient_Cons")
                        .HasForeignKey("Con_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HospitalSystemTask.Models.Patient", "Patient")
                        .WithMany("Patient_Cons")
                        .HasForeignKey("Pat_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Consultant");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("HospitalSystemTask.Models.Ward", b =>
                {
                    b.HasOne("HospitalSystemTask.Models.Nurse", "Supervisor")
                        .WithOne("SupervisedWard")
                        .HasForeignKey("HospitalSystemTask.Models.Ward", "Nurse_Num")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("HospitalSystemTask.Models.Consultant", b =>
                {
                    b.Navigation("Patient_Cons");

                    b.Navigation("Patients");
                });

            modelBuilder.Entity("HospitalSystemTask.Models.Drug", b =>
                {
                    b.Navigation("Brands");

                    b.Navigation("Nurse_Drug_Patients");
                });

            modelBuilder.Entity("HospitalSystemTask.Models.Nurse", b =>
                {
                    b.Navigation("Nurse_Drug_Patients");

                    b.Navigation("SupervisedWard");
                });

            modelBuilder.Entity("HospitalSystemTask.Models.Patient", b =>
                {
                    b.Navigation("Nurse_Drug_Patients");

                    b.Navigation("Patient_Cons");
                });

            modelBuilder.Entity("HospitalSystemTask.Models.Ward", b =>
                {
                    b.Navigation("Nurses");

                    b.Navigation("Patients");
                });
#pragma warning restore 612, 618
        }
    }
}
